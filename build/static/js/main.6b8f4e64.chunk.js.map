{"version":3,"sources":["EditoriaConfig.js","App.js","index.js"],"names":["extraNodes","tableNodes","tableGroup","cellContent","EditoriaSchema","nodes","schema","CreateSchema","shortCuts","toggleMark","marks","strong","em","underline","code","wrapIn","blockquote","Enter","splitListItem","list_item","liftListItem","sinkListItem","joinUp","joinDown","lift","Tab","goToNextCell","setBlockType","paragraph","code_block","wrapInList","bullet_list","ordered_list","heading","level","keys","CreateShortCuts","plugins","columnResizing","tableEditing","TrackChangePlugin","options","invisibles","hardBreak","rules","emDash","ellipsis","window","fetch","FileReader","GlobalStyle","createGlobalStyle","StyledWax","styled","Wax","props","debug","renderImage","file","reader","Promise","resolve","reject","onload","result","onerror","error","setTimeout","readAsDataURL","App","useState","content","setContent","modified","setModified","load","a","res","text","useEffect","save","method","body","onClick","disabled","autoFocus","fileUploader","value","onChange","editor","view","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b8f4e64.chunk.js","sourcesContent":["import {\n  toggleMark,\n  wrapIn,\n  setBlockType,\n  joinUp,\n  joinDown,\n  lift\n} from 'prosemirror-commands'\n\nimport {\n  goToNextCell,\n  tableNodes,\n  columnResizing,\n  tableEditing\n} from 'prosemirror-tables'\n\nimport {\n  wrapInList,\n  splitListItem,\n  liftListItem,\n  sinkListItem\n} from 'prosemirror-schema-list'\n\nimport { emDash, ellipsis } from 'prosemirror-inputrules'\n\nimport invisibles, { hardBreak } from '@guardian/prosemirror-invisibles'\n\nimport { CreateSchema, CreateShortCuts } from 'wax-prosemirror-core'\nimport { TrackChangePlugin } from 'wax-prosemirror-plugins'\nimport { EditoriaSchema } from 'wax-prosemirror-schema'\n\nconst extraNodes = {\n  ...tableNodes({\n    tableGroup: 'block',\n    cellContent: 'block+'\n  })\n}\n\n// CreateSchema\nEditoriaSchema.nodes = { ...EditoriaSchema.nodes, ...extraNodes }\nconst schema = new CreateSchema(EditoriaSchema)\n\nconst shortCuts = {\n  'Mod-b': toggleMark(schema.marks.strong),\n  'Mod-i': toggleMark(schema.marks.em),\n  'Mod-u': toggleMark(schema.marks.underline),\n  'Mod-`': toggleMark(schema.marks.code),\n  'Ctrl->': wrapIn(schema.nodes.blockquote),\n  Enter: splitListItem(schema.nodes.list_item),\n  'Mod-[': liftListItem(schema.nodes.list_item),\n  'Mod-]': sinkListItem(schema.nodes.list_item),\n  'Alt-ArrowUp': joinUp,\n  'Alt-ArrowDown': joinDown,\n  'Mod-BracketLeft': lift,\n  Tab: goToNextCell(1),\n  'Shift-Tab': goToNextCell(-1),\n  'Shift-Ctrl-0': setBlockType(schema.nodes.paragraph),\n  'Shift-Ctrl-\\\\': setBlockType(schema.nodes.code_block),\n  'Shift-Ctrl-8': wrapInList(schema.nodes.bullet_list),\n  'Shift-Ctrl-9': wrapInList(schema.nodes.ordered_list),\n  'Shift-Ctrl-1': setBlockType(schema.nodes.heading, { level: 1 }),\n  'Shift-Ctrl-2': setBlockType(schema.nodes.heading, { level: 2 }),\n  'Shift-Ctrl-3': setBlockType(schema.nodes.heading, { level: 3 }),\n  'Shift-Ctrl-4': setBlockType(schema.nodes.heading, { level: 4 }),\n  'Shift-Ctrl-5': setBlockType(schema.nodes.heading, { level: 5 }),\n  'Shift-Ctrl-6': setBlockType(schema.nodes.heading, { level: 6 })\n}\n\n// Create shortCuts\nconst keys = new CreateShortCuts({ schema, shortCuts })\n\n// Add Plugins\nconst plugins = [\n  columnResizing(),\n  tableEditing(),\n  TrackChangePlugin({ options: {} }),\n  invisibles([hardBreak()])\n]\n\n// Add Rules\nconst rules = [emDash, ellipsis]\n\nexport { schema, keys, plugins, rules }\n","import React, { useState, useEffect } from 'react'\nimport { Wax } from 'wax-prosemirror-core'\nimport { EditoriaLayout } from 'wax-prosemirror-layouts'\nimport * as options from './EditoriaConfig'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst { fetch, FileReader } = window\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    overflow-y: hidden;\n    #root {\n      height:100vh;\n      width:100vw;\n    }\n  }\n`\n\nconst StyledWax = styled(Wax)`\n  .wax-surface-scroll {\n    height: ${props => (props.debug ? '50vh' : '100%')};\n  }\n`\n\nconst renderImage = file => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = () => reject(reader.error)\n    // Some extra delay to make the asynchronicity visible\n    setTimeout(() => reader.readAsDataURL(file), 150)\n  })\n}\n\nconst App = () => {\n  const [content, setContent] = useState(null)\n  const [modified, setModified] = useState(false)\n\n  const onChange = content => {\n    setModified(true)\n    setContent(content)\n  }\n\n  const load = async () => {\n    const res = await fetch('/content')\n    setContent(await res.text())\n  }\n\n  useEffect(() => load(), [])\n\n  const save = async () => {\n    setModified(false)\n    await fetch('/content', {\n      method: 'PUT',\n      body: content\n    })\n  }\n\n  if (content === null) return null\n\n  return (\n    <>\n      <GlobalStyle />\n      <button onClick={save} disabled={!content || !modified}>\n        Save\n      </button>\n      <StyledWax\n        options={options}\n        autoFocus\n        fileUploader={renderImage}\n        value={content}\n        onChange={onChange}\n      >\n        {({ editor, view, ...props }) => (\n          <EditoriaLayout editor={editor} view={view} {...props} />\n        )}\n      </StyledWax>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}